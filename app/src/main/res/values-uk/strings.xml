<resources>
    <string name="app_name">Visualisater</string>
    <string name="main_new_graf">Створити новий граф</string>
    <string name="main_load_graf">Завантажити граф</string>
    <string name="main_settings">Налаштування</string>
    <string name="main_description">Опис</string>
    <string name="main_exit">Вихiд</string>
    <string name="new_graph_create">Cтворити граф</string>
    <string name="new_graph_neor">Неорієнтований граф</string>
    <string name="new_graph_or">Орієнтований граф</string>
    <string name="visualaser_set">Задати число</string>
    <string name="visualaser_save">Зберегти граф</string>
    <string name="visualaser_kruskal">Знайти кістякове дерево</string>
    <string name="visualaser_return">Повернути</string>
    <string name="settings_lang">Оберiть мову: </string>
    <string name="description">
       Опис \n
    Завдання програми полягає в тому, щоб візуалізувати графи,
        необхідні в навчальних та прикладних цілях.
        \n Принцип роботи програми: задається матриця суміжності (таблиця, в якій можна встановлювати і скидати поля).
        Матриця суміжності - один із способів подання математичного графа у вигляді матриці.
    Кількість рядків і стовпців - це кількість вершин в графі. Елементи цієї таблиці - це наявність ребер,
        т. е., якщо елемент з i-того рядка і j-того стовпця встановлено, то кажуть, що з вершини i йде спрямоване ребро (орієнтоване,
    або ж як ще називають - дуга) в j вершину. Якщо, в свою чергу, з j-ой в i-тую вершину теж йде ребро, то обидва ребра позначаються
    як одне і кажуть, що це неорієнтоване ребро (в дві сторони). У разі, якщо ми встановимо, що з i вершини ребро йде в i вершину,
        то ребро буде заходити в ту ж вершину, з якої вона і вийшла. В теорії графів це називається петлею. \n
        Щоб збільшити кількість вершин графа, досить при його створенні натиснути кнопку "+", щоб прибрати одну вершину, потрібно
        натиснути кнопку "-". Якщо вийшла матриця буде симетричною - то на виході ми отримаємо неорієнтовані граф, що складається
        тільки з неорганізованому. ребер, інакше орієнтований, в якому будуть присутні спрямовані дуги.
        Як тільки заповнення матриці суміжності готове, потрібно натиснути на кнопку "створити граф". \n
        На новому екрані вам постане граф, який ви створили. Якщо ж результат незадовільний, можна повернутися
        до попереднього екрана.
        На цьому екрані видно колу, всередину яких вписані числа - це вершини графа. Для зручності їх можна рухати і
        переставляти з місця на місце. Між вершинами встановлені ребра (якщо, звичайно, матриця на попередньому екрані не залишилася порожньою).
        Якщо ребро суцільне - значить воно неорієнтоване (дивиться в дві сторони). Якщо ребро складається з стрілок - значить це дуга. \n
        По середині кожного ребра є певна кількість - це вага ребра. У деяких задачах ця вага приймається за відстань між
        населеними пунктами, час і т.д. Якщо ж натиснути на будь-якої вага, то ця вага загориться і змінить колір на червоний.
        Виділений вага можна поміняти, внісши деяке значення в поле внизу і натиснувши на кнопку ввести число. Якщо ж жодна з ребер НЕ
        виділено, то нічого не станеться. \n
        Граф, у якого є ваги ребер називається зваженим. Такі графи дуже корисні при побудові логістичних маршрутів між
        населеними пунктами, прокладки інфраструктури і т.д. \n
        Також є кнопки побудови остовного дерева (за допомогою алгоритму Круськала) і повернення до початкового стану графа. \n
        Мінімальна кістяк (або мінімальне покриває дерево) у зв\'язаному зваженому графі - це кістяк
        дерево цього графа, що має мінімальний можливий вага, де під вагою дерева розуміється сума ваг входять до нього ребер. \n \n \n \n \n \n \n \n \n
    </string>
</resources>