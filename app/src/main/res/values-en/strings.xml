<resources>
    <string name="app_name">Visualiser</string>
    <string name="main_new_graf">Create new graph</string>
    <string name="main_load_graf">Load graph</string>
    <string name="main_settings">Settings</string>
    <string name="main_description">Description</string>
    <string name="main_exit">Exit</string>
    <string name="new_graph_create">Create graph</string>
    <string name="new_graph_neor">Not directed graph</string>
    <string name="new_graph_or">Directed graph</string>
    <string name="visualaser_set">Set number</string>
    <string name="visualaser_save">Save graph</string>
    <string name="visualaser_kruskal">Find the spanning tree</string>
    <string name="visualaser_return">Return</string>
    <string name="settings_lang">Choose language: </string>
    <string name="description">
       Description \n
    The task of the program is to visualize graphs,
        necessary for educational and applied purposes.
        \n How the program works: an adjacency matrix is ​​set (a table in which you can set and clear fields).
        An adjacency matrix is ​​one way of representing a mathematical graph as a matrix.
    The number of rows and columns is the number of vertices in the graph. The elements of this table are the presence of edges,
        i.e., if an element from the i-th row and j-th column is set, then they say that a directed edge (oriented,
    or as it is also called - the arc) to the j vertex. If, in turn, an edge also goes from the j-th vertex to the i-th vertex, then both edges are denoted
    like one they say that this is an undirected edge (in two directions). If we establish that from the i vertex an edge goes to the i vertex,
        then the edge will enter the same vertex from which it left. This is called a loop in graph theory. \n
        To increase the number of vertices of the graph, it is enough to press the "+" button when creating it; to remove one vertex, you need
        press the "-" button. If the resulting matrix is ​​symmetric, then at the output we will get an undirected graph consisting
        only from neor. edges, otherwise oriented, in which directed arcs will be present.
        As soon as filling in the adjacency matrix is ​​ready, you need to click on the "create graph" button. \n
        On a new screen, you will see the graph that you created. If the result is unsatisfactory, you can return
        to the previous screen.
        On this screen, you can see the circles, inside which numbers are inscribed - these are the vertices of the graph. For convenience, they can be moved and
        rearrange from place to place. Edges are installed between the vertices (unless, of course, the matrix on the previous screen is empty).
        If the edge is solid, it means it is not oriented (looks in two directions). If an edge consists of arrows, then it is an arc. \n
        There is a number in the middle of each edge - this is the edge\'s weight. In some problems, this weight is taken as the distance between
        settlements, time, etc. If you click on any weight, then this weight will light up and change color to red.
        The selected weight can be changed by entering a value in the field below and pressing the button to enter a number. If none of the ribs
        is selected, nothing will happen. \n
        A graph that has edge weights is called weighted. Such graphs are very useful when constructing logistics routes between
        settlements, infrastructure laying, etc. \n
        There are also buttons for building a spanning tree (using Kruskal\'s algorithm) and returning to the original state of the graph. \n
        The minimum spanning tree (or minimum spanning tree) in a linked weighted graph is the spanning tree
        the tree of this graph with the minimum possible weight, where the weight of the tree is the sum of the weights of its edges.
        \n \n \n \n \n \n \n \n \n.
    </string>
</resources>